FROM python:3.11-slim

WORKDIR /app

# Install system dependencies
RUN apt-get update && apt-get install -y \
    gcc \
    g++ \
    curl \
    && rm -rf /var/lib/apt/lists/*

# Copy requirements files
COPY backend/requirements.txt .

# Install Python dependencies with fallback
RUN pip install --upgrade pip && \
    pip install --no-cache-dir -r requirements.txt || \
    (echo "Retrying with individual packages..." && \
     pip install --no-cache-dir python-dotenv flask flask-cors && \
     pip install --no-cache-dir crewai langchain langchain-community langchain-core && \
     pip install --no-cache-dir chromadb sentence-transformers ollama && \
     pip install --no-cache-dir pydantic typing-extensions)

# Copy application files
COPY backend/server.py .
COPY backend/crewai_analyzer.py .
COPY backend/startup_ollama.py .
COPY backend/train_knowledge_base.py .
COPY backend/feedback_system.py .
COPY backend/ollama_trainer.py .
COPY knowledge_base ./knowledge_base

# Create chroma_db directory
RUN mkdir -p chroma_db

# Create startup script
RUN echo '#!/bin/bash\n\
echo "🚀 Starting backend with Ollama model check..."\n\
python startup_ollama.py\n\
if [ $? -eq 0 ]; then\n\
    echo "✅ Ollama models ready, training knowledge base..."\n\
    python train_knowledge_base.py\n\
    echo "✅ Knowledge base training completed, starting server..."\n\
    python server.py\n\
else\n\
    echo "❌ Ollama model setup failed"\n\
    exit 1\n\
fi' > /app/start.sh && chmod +x /app/start.sh

EXPOSE 5557

CMD ["/app/start.sh"]
